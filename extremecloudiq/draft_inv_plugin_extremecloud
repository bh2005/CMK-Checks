#!/usr/bin/env python3

import requests
import json
import os
import sys

# API-Konfiguration (als Umgebungsvariablen setzen)
API_KEY = os.environ.get("XIQ_API_KEY")
API_SECRET = os.environ.get("XIQ_API_SECRET")
XIQ_BASE_URL = "https://api.extremecloudiq.com"

def get_access_points():
    """Ruft die Access Points von der ExtremeCloud IQ API ab."""
    try:
        if not API_KEY or not API_SECRET:
            print("XIQ_API_KEY oder XIQ_API_SECRET Umgebungsvariablen sind nicht gesetzt.")
            return None

        headers = {"Authorization": f"Bearer {API_KEY}"}
        url = f"{XIQ_BASE_URL}/devices?type=AP&limit=1000" # Limit hochgesetzt, ggf. Paginierung implementieren
        response = requests.get(url, headers=headers)
        response.raise_for_status() # Löst eine Exception bei HTTP-Fehlern aus
        return response.json().get("data", [])

    except requests.exceptions.RequestException as e:
        print(f"Fehler bei der API-Abfrage: {e}")
        return None
    except json.JSONDecodeError as e:
        print(f"Fehler beim Parsen der JSON-Antwort: {e}")
        return None

def main():
    access_points = get_access_points()
    if access_points is None:
        sys.exit(1)

    inventory_data = {}
    for ap in access_points:
        serial = ap.get("serial_number")
        if serial:
            inventory_data[serial] = {
                "name": ap.get("name"),
                "model": ap.get("model"),
                "mac": ap.get("mac"),
                "location": ap.get("location", {}).get("name", "Kein Standort festgelegt")
            }
            # Weitere Attribute nach Bedarf hinzufügen

    print(json.dumps(inventory_data))

if __name__ == "__main__":
    main()